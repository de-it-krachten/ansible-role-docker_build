---

# Create image using ansible and deploy an container
- name: Create image using ansible and deploy an container
  hosts: localhost
  become: true
  vars:
    ansible_python_interpreter: "{{ '/usr/bin/python' if force_python2 is defined else '/usr/bin/python3' }}"
  tasks:

    - name: Load pipeline variable from file
      ansible.builtin.set_fact:
        build_vars: "{{ lookup('file', 'docker-settings.yml') | from_yaml }}"

    - name: Show settings
      ansible.builtin.debug:
        msg: "{{ build_vars }}"

    - name: Create temporary build directory
      ansible.builtin.tempfile:
        state: directory
        suffix: build
      register: _build_path

    - name: Defined build path
      ansible.builtin.set_fact:
        buildpath: "{{ _build_path.path }}"

    - name: Create Dockerfile from template
      ansible.builtin.template:
        src: "{{ lookup('env', 'SOURCE_PATH') + '/Dockerfile.j2' }}"
        dest: "{{ buildpath }}/Dockerfile"
        mode: "0644"

    - name: Create intermediate Dockerfile from template
      ansible.builtin.template:
        src: "{{ lookup('env', 'SOURCE_PATH') + '/Dockerfile-intermediate.j2' }}"
        dest: "{{ buildpath }}/Dockerfile-intermediate"
        mode: "0644"
      when: build_vars.image.intermediate is defined

    - name: Docker build phase
      when: lookup('env', 'DOCKER_BUILD_REFRESH') | bool
      block:

        - name: Build intermediate image
          community.docker.docker_image:
            name: "{{ build_vars.image.intermediate }}"
            source: build
            build:
              dockerfile: Dockerfile-intermediate
              path: "{{ buildpath }}"
              pull: true
              args: "{{ docker_container_build_args | default(omit) }}"
          register: _build
          when: build_vars.image.intermediate is defined

        - name: Create image from Dockerfile
          community.docker.docker_image:
            name: "{{ build_vars.image.name }}"
            source: build
            build:
              path: "{{ buildpath }}"
              pull: true
              args: "{{ docker_container_build_args | default(omit) }}"
          register: _build

        - name: Show build log
          ansible.builtin.debug:
            msg: "{{ _build.stdout_lines }}"

        - name: Deploy container from new image
          community.docker.docker_container:
            name: "{{ build_vars.container.name }}"
            image: "{{ build_vars.image.name }}"
            container_default_behavior: no_defaults
            privileged: "{{ build_vars.container.priviledged | default(False) }}"
            volumes: "{{ build_vars.container.volumes | default(omit) }}"
          when: build_vars.container.name is defined


# Add container to inventory
- name: Add container to inventory
  hosts: localhost
  tasks:

    - name: Wait for 5 seconds
      ansible.builtin.pause:
        seconds: 5

    - name: Add docker container
      ansible.builtin.add_host:
        name: "{{ build_vars.container.name }}"
        ansible_connection: docker
        ansible_host: "{{ build_vars.container.name }}"
        ansible_user: root
        # ansible_docker_extra_args: >-
        #   -H tcp://127.0.0.1:2375
        groups:
          - containers
      when: build_vars.container.name is defined
